name: Deploy Infrastructure

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'infrastructure/**'
  pull_request:
    branches:
      - main
      - master
    paths:
      - 'infrastructure/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        type: choice
        options:
          - dev
          - production
        default: 'dev'
      action:
        description: 'Terraform action'
        required: true
        type: choice
        options:
          - plan
          - apply
          - destroy
        default: 'plan'

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform:
    runs-on: ubuntu-latest
    
    env:
      TF_ENV: ${{ github.event.inputs.environment || 'dev' }}
      TF_ACTION: ${{ github.event.inputs.action || 'plan' }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::443311183770:role/Github-Actions-Runner-OIDC
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.0

      - name: Terraform Format Check
        working-directory: infrastructure/environments/${{ env.TF_ENV }}
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: Terraform Init
        working-directory: infrastructure/environments/${{ env.TF_ENV }}
        run: terraform init

      - name: Terraform Validate
        working-directory: infrastructure/environments/${{ env.TF_ENV }}
        run: terraform validate

      - name: Terraform Plan
        id: plan
        working-directory: infrastructure/environments/${{ env.TF_ENV }}
        run: |
          terraform plan -no-color -out=tfplan
          terraform show -no-color tfplan > plan.txt
        continue-on-error: true

      - name: Comment PR with Plan
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('infrastructure/environments/${{ env.TF_ENV }}/plan.txt', 'utf8');
            const output = `#### Terraform Plan 📖
            <details><summary>Show Plan</summary>

            \`\`\`terraform
            ${plan}
            \`\`\`

            </details>

            *Environment: \`${{ env.TF_ENV }}\`*
            *Pusher: @${{ github.actor }}*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });

      - name: Terraform Apply
        if: |
          (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply') ||
          (github.event_name == 'push' && github.ref == 'refs/heads/master')
        working-directory: infrastructure/environments/${{ env.TF_ENV }}
        run: terraform apply -auto-approve tfplan

      - name: Terraform Destroy
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
        working-directory: infrastructure/environments/${{ env.TF_ENV }}
        run: terraform destroy -auto-approve

      - name: Output Summary
        if: |
          (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply') ||
          (github.event_name == 'push' && github.ref == 'refs/heads/master')
        working-directory: infrastructure/environments/${{ env.TF_ENV }}
        run: |
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "🎉 Deployment Complete!"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo ""
          terraform output
