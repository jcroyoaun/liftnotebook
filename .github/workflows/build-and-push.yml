name: Build and Push to ECR

on:
  push:
    branches:
      - master
    paths:
      - 'microservices/**'
  workflow_dispatch:
    inputs:
      service:
        description: 'Service to build'
        required: true
        type: choice
        options:
          - all
          - exerciselib
          - frontend
      tag:
        description: 'Custom tag (optional, defaults to git SHA)'
        required: false
        type: string

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      exerciselib: ${{ steps.filter.outputs.exerciselib }}
      frontend: ${{ steps.filter.outputs.frontend }}
      build_all: ${{ steps.check.outputs.build_all }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check if manual trigger with 'all'
        id: check
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ "${{ github.event.inputs.service }}" == "all" ]; then
            echo "build_all=true" >> $GITHUB_OUTPUT
          else
            echo "build_all=false" >> $GITHUB_OUTPUT
          fi

      - name: Detect changed services
        id: filter
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            # Manual trigger
            if [ "${{ github.event.inputs.service }}" == "exerciselib" ] || [ "${{ github.event.inputs.service }}" == "all" ]; then
              echo "exerciselib=true" >> $GITHUB_OUTPUT
            else
              echo "exerciselib=false" >> $GITHUB_OUTPUT
            fi
            
            if [ "${{ github.event.inputs.service }}" == "frontend" ] || [ "${{ github.event.inputs.service }}" == "all" ]; then
              echo "frontend=true" >> $GITHUB_OUTPUT
            else
              echo "frontend=false" >> $GITHUB_OUTPUT
            fi
          else
            # Push trigger - detect changes
            if git diff --name-only HEAD^ HEAD | grep -q '^microservices/exerciselib/'; then
              echo "exerciselib=true" >> $GITHUB_OUTPUT
            else
              echo "exerciselib=false" >> $GITHUB_OUTPUT
            fi
            
            if git diff --name-only HEAD^ HEAD | grep -q '^microservices/frontend/'; then
              echo "frontend=true" >> $GITHUB_OUTPUT
            else
              echo "frontend=false" >> $GITHUB_OUTPUT
            fi
          fi

  build-exerciselib:
    needs: detect-changes
    if: needs.detect-changes.outputs.exerciselib == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::443311183770:role/Github-Actions-Runner-OIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Generate Image Tag
        id: tag
        run: |
          if [ "${{ github.event.inputs.tag }}" != "" ]; then
            TAG="${{ github.event.inputs.tag }}"
          else
            TAG=$(git rev-parse --short HEAD)
          fi
          echo "image_tag=${TAG}" >> $GITHUB_OUTPUT

      - name: Build and Push exerciselib
        working-directory: microservices/exerciselib
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.tag.outputs.image_tag }}
        run: |
          echo "🐳 Building exerciselib..."
          docker build -t $ECR_REGISTRY/exerciselib:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/exerciselib:$IMAGE_TAG $ECR_REGISTRY/exerciselib:latest
          
          echo "🚀 Pushing to ECR..."
          docker push $ECR_REGISTRY/exerciselib:$IMAGE_TAG
          docker push $ECR_REGISTRY/exerciselib:latest
          
          echo "✅ exerciselib pushed!"
          echo "📦 $ECR_REGISTRY/exerciselib:$IMAGE_TAG"
          echo "📦 $ECR_REGISTRY/exerciselib:latest"

  build-frontend:
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::443311183770:role/Github-Actions-Runner-OIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Generate Image Tag
        id: tag
        run: |
          if [ "${{ github.event.inputs.tag }}" != "" ]; then
            TAG="${{ github.event.inputs.tag }}"
          else
            TAG=$(git rev-parse --short HEAD)
          fi
          echo "image_tag=${TAG}" >> $GITHUB_OUTPUT

      - name: Build and Push frontend
        working-directory: microservices/frontend
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.tag.outputs.image_tag }}
        run: |
          echo "🐳 Building frontend..."
          docker build -t $ECR_REGISTRY/frontend:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/frontend:$IMAGE_TAG $ECR_REGISTRY/frontend:latest
          
          echo "🚀 Pushing to ECR..."
          docker push $ECR_REGISTRY/frontend:$IMAGE_TAG
          docker push $ECR_REGISTRY/frontend:latest
          
          echo "✅ frontend pushed!"
          echo "📦 $ECR_REGISTRY/frontend:$IMAGE_TAG"
          echo "📦 $ECR_REGISTRY/frontend:latest"

  summary:
    needs: [detect-changes, build-exerciselib, build-frontend]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Build Summary
        run: |
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "🎉 Build Summary"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo ""
          echo "exerciselib: ${{ needs.detect-changes.outputs.exerciselib }}"
          echo "frontend: ${{ needs.detect-changes.outputs.frontend }}"
