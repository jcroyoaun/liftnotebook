service:
  name: frontend
  replicas: 2

  volumes:
    - name: frontend-config-volume
      configMap:
        name: frontend-config-file

  container:
    image: frontend
    tag: latest
    port: 80
    resources:
      limits:
        cpu: "0.5"
        memory: 512Mi
      requests:
        cpu: "0.2"
        memory: "256Mi"
    probes:
      startup:
        path: /
      liveness:
        path: /
    volumeMounts:
      - name: frontend-config-volume
        mountPath: /etc/nginx/conf.d/default.conf
        subPath: nginx.conf

  # Store the frontend HTML and nginx config as configFiles
  configFiles:
    nginx.conf: |-
      server {
          listen 80;
          server_name _;

          root /usr/share/nginx/html;
          index index.html;

          location / {
              try_files $uri $uri/ /index.html;
          }

          # Proxy API requests to the backend
          location /v1/ {
              proxy_pass http://exerciselib-svc.exerciselib:4000;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }
      }

  # AWS Load Balancer configuration
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: alb
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
      alb.ingress.kubernetes.io/healthcheck-path: /
    hosts:
      - host: ""
        paths:
          - path: /*
            pathType: ImplementationSpecific


  networkPolicy:
    enabled: true
    ingress:
      - fromEndpoints:
          - matchLabels:
              # Allow ingress from anywhere (public access to web frontend)
              io.kubernetes.pod.namespace: kube-system
              k8s-app: kube-dns
        toPorts:
          - ports:
              - port: "53"
                protocol: UDP
              - port: "53"
                protocol: TCP
            rules:
              dns:
                - matchPattern: "*"
      - fromEndpoints: []  # Empty selector means all sources (public access)
        toPorts:
          - ports:
              - port: "80"
                protocol: TCP
    egress:
      - toEndpoints:
          - matchLabels:
              io.kubernetes.pod.namespace: kube-system
              k8s-app: kube-dns
        toPorts:
          - ports:
              - port: "53"
                protocol: UDP
              - port: "53"
                protocol: TCP
            rules:
              dns:
                - matchPattern: "*"
      - toEndpoints:
          - matchLabels:
              app: exerciselib
              io.kubernetes.pod.namespace: exerciselib
        toPorts:
          - ports:
              - port: "4000"
                protocol: TCP
